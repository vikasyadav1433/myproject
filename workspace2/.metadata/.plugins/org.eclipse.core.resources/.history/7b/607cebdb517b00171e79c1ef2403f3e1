package www.vikas.dao;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import www.vikas.model.Customer;
import www.vikas.model.UserDetails;

@Repository
public class CustomerDaoImp implements CustomerDaoInt {

	@Autowired
	private SessionFactory sessionFactory;
	
	public String addCustomer(Customer cust) {
	Session ses = sessionFactory.openSession();
	cust.setCustomerid(generateCustomerID());
	cust.getUserDetails().setUserid(generateUserID());
	cust.getShippingAddress().setShippingaddressid(generateShippingAddressID());
	cust.getBillingAddress().setBillingAddressid(generateBillingAddressID());
	cust.getCart().setCartid(generateCartID());
	ses.save(cust);
	ses.flush();
	ses.close();
	saveCustomerImage(cust);
	return cust,getUserDetails().getUserid();
	}

	
	public Customer getCustomerByUserId(String uid) {
		Session ses = sessionFactory.openSession();
		UserDeatails temp = ses.get(UserDetails.class, uid);
		ses.close();
		return temp.getCustomer();
	}

	private String generateCustomerID(){
		String newCid="";
		Session s = sessionFactory.openSession();
		Query qr = s.createQuery("from Customer");
		List<UserDeatails> data = qr.list();
		s.close();
		if(data.size()==0){
			newCid="CST00001";
		}
		else {
			Session ss= sessionFactory.openSession();
			Query q = ss.createQuery("Select max(customerid) form Customer");
			String pervId = q.list().get(0).toString();
			System.out.print("\nExisting id: "+prevId);
			int id = Integer.parseInt(prevId.substring(3));
			System.out.print("\nExisting id: "+id);
			id=id+1;
			if(id<=9)
				newCid="CST0000"+id;
			else if(id<=99)
				newCid="CSTOOO"+id;
			else if(id<=999)
				newCid="CST00"+id;
			else if(id<=9999)
				newCid="CST0"+id;
			else 
				newCid="CST"+id;
			System.out.print("\nGenerated : "+newCid);
			ss.close();
		}return newCid;
		
	}
	 
	private String generateUserID(){
		String newUid="";
		Session s = sessionFactory.openSession();
		Query qr = s.createQuery("from UserDetails");
		List<UserDetails> data = qr.list();
		x.close();
		if(data.size()==0){
			newUid="USR00001";
		}
		else{
			Session ss= sessionFactory.openSession();
			Query q = ss.createQuery("select max(userid) from UserDetails");
			String prevId = q.list().get(0).toString();
			System.out.print("\nExisting id :"+prevId);
			int id = Integer.pareseInt(prevId.substring(3));
			System.out.print("\nExitsing id : "+id);
			id=id+1;
			if(id<=9)
				newUid="USR0000"+id;
			else if(id<=99)
				newUid="USR000"+id;
			else if(id<=999)
			    newUid="USR00"+id;
			else if(id<=9999)
				newUid="USR0"+id;
			else 
				newUid="USR"+id;
			System.out.print("\nGenerated :" +newUid);
			ss.close();
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
